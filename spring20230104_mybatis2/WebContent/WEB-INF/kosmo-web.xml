<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">
<aop:aspectj-autoproxy/>

<!-- 
	@Component : 일반 빈을 만들 때 
	@Controller : Controller에 의해서 요청되는 모델관련 빈을 만들 때
	@Repository : 자원 관련 빈을 만들 때 
    @Service : 요청 -> Filter -> DispathcerServlet(Controller) -> 
     ->@Controller(model) -> HandlerMapping (요청분석) -> 모델이 실행 -> 
     -> @Service(트랜젝션 처리) -> @Repository(Dao) -> Database처리 (SqlSessionFactoryBean)
    @RestController : RestFulAPI : json을 서비스 하기 위해서 많이 사용함.
    @ControllerAdvice : AOP에서 공통관심사항을 Advice라 했다. Controller단에서 Advice를 적용하고 싶을
    때 사용 한다. 예) 예외처리에 주로 사용함.
-->
<context:component-scan base-package="kr.co.kosmo.mvc"/>

<mvc:annotation-driven/>
<mvc:resources location="/resources/" mapping="/resources/**"/>

<!-- DataSource 설정 및 MyBatis설정  -->
<!-- DataSource : JNDI -->
<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
<property name="jndiName" value="java:comp/env/jdbc/myora"/>
</bean>
<!-- MyBatis  SqlSessionFactoryBean에서 설정을 한다.-->
<bean id="factoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
<property name="dataSource" ref="dataSource"/>
<property name="configLocation" value="classpath:kr/co/kosmo/mvc/config/config.xml"/>
<property name="mapperLocations" value="classpath*:kr/co/kosmo/mvc/mapper/*.xml"/>
</bean>

<!--  Spring 제공 하는 SqlSessionTemplate -->
<bean id="ss" class="org.mybatis.spring.SqlSessionTemplate">
<constructor-arg ref="factoryBean"/>
</bean>
<!-- DataSource 설정 및 MyBatis설정  끝
<bean id="membeDao" class="kr.co.kosmo.mvc.dao.MemberDao">
<property name="ss" ref="ss"></property>
</bean>
-->
<!--  View의 타입 => viewResolver 설정 
	/WEB-INF/views/[hello].jsp
-->
<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
<property name="prefix" value="/WEB-INF/views/"/>
<property name="suffix" value=".jsp"/>
</bean>
</beans>







